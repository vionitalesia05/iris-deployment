# -*- coding: utf-8 -*-
"""sesi7.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1XX7DGV-F20ZBIgyPNOq7G8Y09aQV_PbJ
"""

import pickle
import numpy as np
import streamlit as st
from sklearn.datasets import load_iris
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score, classification_report

# Load dataset
iris = load_iris()
X, y = iris.data, iris.target

# Split data
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train model
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)

# Evaluate model
y_pred = model.predict(X_test)
accuracy = accuracy_score(y_test, y_pred)
print(f"Model Accuracy: {accuracy:.2f}")
print(classification_report(y_test, y_pred, target_names=iris.target_names))

# Save model
with open("iris_model.pkl", "wb") as f:
    pickle.dump(model, f)

# Streamlit App
st.title("Iris Flower Prediction")
st.write("Masukkan fitur bunga untuk mendapatkan prediksi kelasnya.")

# Input fields
sepal_length = st.number_input("Sepal Length", min_value=0.0, step=0.1)
sepal_width = st.number_input("Sepal Width", min_value=0.0, step=0.1)
petal_length = st.number_input("Petal Length", min_value=0.0, step=0.1)
petal_width = st.number_input("Petal Width", min_value=0.0, step=0.1)

# Load model
with open("iris_model.pkl", "rb") as f:
    model = pickle.load(f)

# Predict button
if st.button("Predict"):
    features = np.array([[sepal_length, sepal_width, petal_length, petal_width]])
    prediction = model.predict(features)
    class_name = iris.target_names[prediction[0]]
    st.success(f"Predicted Class: {class_name}")

st.write("## Cara Menjalankan")
st.write("1. Jalankan dengan perintah: `streamlit run app.py` ")
st.write("2. Jika ingin deploy, unggah ke GitHub dan gunakan Streamlit Cloud")





